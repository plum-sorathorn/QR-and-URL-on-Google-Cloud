name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: '${{ secrets.GCP_PROJECT }}' # TODO: update to your Google Cloud project ID
  REGION: '${{ secrets.GCP_REGION }}' # TODO: update to your region
  SERVICE: '${{ secrets.SERVICE_NAME }}' # TODO: update to your service name
  JSON_KEY: '${{ secrets.GCP_SA_KEY }}'
  REPOSITORY: 'qr-url-repo'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout Code'
        uses: 'actions/checkout@v2'

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ env.JSON_KEY }}"

      # Configure Docker to use Google Cloud credentials
      - name: Set up Docker
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # Build and tag the image
      - name: Build Docker image
        run: |
          docker build -t qr-generator-and-url-shortener .

      - name: Tag Docker image
        run: |
          docker tag qr-generator-and-url-shortener \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/qr-generator-and-url-shortener:latest

      # Push to Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/qr-generator-and-url-shortener:latest

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/qr-generator-and-url-shortener:latest
          region: ${{ env.REGION }}
          flags: "--allow-unauthenticated"
